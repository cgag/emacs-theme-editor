  (defun #{confname} ()
    (interactive)
    (color-theme-install
     '(#{confname}
        ((background-color . "#{getColor("background")}")
         (background-mode . light)
         (border-color . "#{getColor("border")}")
         (cursor-color . "#{getColor("cursor")}")
         (foreground-color . "#{getColor("foreground")}")
         (mouse-color . "black"))
        (fringe ((t ( :background "#{getColor("border")}" ))))
        (mode-line ((t (:foreground "#{getColor("modelinefg")}" :background "#{getColor("modelinebg")}" ))))
        (region ((t ( :background "#{getColor("region")}" ))))
        (font-lock-builtin-face ((t (:foreground "#{getColor("builtin")}" ))))
        (font-lock-comment-face ((t (:foreground "#{getColor("comment")}" ))))
        (font-lock-function-name-face ((t (:foreground "#{getColor("function")}" ))))
        (font-lock-keyword-face ((t (:foreground "#{getColor("keyword")}" ))))
        (font-lock-string-face ((t (:foreground "#{getColor("string")}" ))))
        (font-lock-type-face ((t (:foreground"#{getColor("type")}" ))))
        (font-lock-constant-face ((t (:foreground "#{getColor("constant")}" ))))
        (font-lock-variable-name-face ((t (:foreground "#{getColor("variable")}" ))))
        (minibuffer-prompt ((t (:foreground "#{getColor("prompt")}" :bold t ))))
        (font-lock-warning-face ((t (:foreground "red" :bold t ))))
       )))
  (provide '#{confname})
